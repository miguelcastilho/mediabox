---
- name: Create infra namespace
  kubernetes.core.k8s:
    name: infra
    kind: Namespace
    state: present

- name: Create media namespace
  kubernetes.core.k8s:
    name: infra
    kind: Namespace
    state: present

- name: Create manifests folder
  ansible.builtin.file:
    path: "{{ install_path }}/manifests"
    state: directory

- name: Copy manifest files
  ansible.builtin.template:
    src: "manifests/{{ item }}.yml.j2"
    dest: "{{ install_path }}/manifests/{{ item }}.yml"
  loop: "{{ enable_services }}"

- name: Deploy manifests
  kubernetes.core.k8s:
    template: "manifests/{{ item }}.yml.j2"
    apply: true
    server_side_apply:
      field_manager: ansible
  loop: "{{ enable_services }}"

- name: Create list of services to copy logo files
  set_fact:
    service_list: "{{ enable_services | default([]) }}"

- name: Include 'adguard-home' if install_adguard_home is true
  when: install_adguard_home
  set_fact:
    service_list: "{{ service_list + ['adguard-home'] + ['freeathome'] }}"

- name: Copy icons files
  ansible.builtin.copy:
    src: "files/{{ item }}.png"
    dest: "{{ data_path }}/homer/tools/{{ item }}.png"
  loop: "{{ service_list }}"
  when: item != 'homer' and item != 'flaresolverr' and item != 'mqtt'

- name: Get Traefik External IP
  shell: "KUBECONFIG=/home/{{ ansible_user }}/.kube/config kubectl get svc traefik -n kube-system -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'"
  register: external_ip
  changed_when: false
  when: external_ip is not defined

- name: Copy homer config file to remote server
  ansible.builtin.template:
    src: homer-config.yml.j2
    dest: "{{ data_path }}/homer/config.yml"
  when: "'homer' in enable_services"

- block:
    - name: Check if zigbee2mqtt configuration file already exists
      stat:
        path: "{{ data_path }}/zigbee2mqtt/configuration.yaml"
      register: zigbee2mqtt_configuration_existing

    - name: "Create zigbee2mqtt directory"
      ansible.builtin.file:
        path: "{{ install_path }}/zigbee2mqtt"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      when: not zigbee2mqtt_configuration_existing.stat.exists

    - name: Copy zigbee2mqtt configuration file
      ansible.builtin.template:
        src: templates/zigbee2mqtt_config.yml.j2
        dest: "{{ data_path }}/zigbee2mqtt/configuration.yaml"
      when: not zigbee2mqtt_configuration_existing.stat.exists
  when: "'zigbee2mqtt' in enable_services"

- name: Check containers status
  shell: "KUBECONFIG=/home/{{ ansible_user }}/.kube/config kubectl wait pod --for condition=ready --field-selector=status.phase!=Succeeded -A --all --timeout 10m"
  changed_when: false
