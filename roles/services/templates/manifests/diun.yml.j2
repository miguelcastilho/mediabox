---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: infra
  name: diun

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: diun
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - watch
      - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: diun
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: diun
subjects:
  - kind: ServiceAccount
    name: diun
    namespace: infra

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: infra
  name: diun
spec:
  replicas: 1
  selector:
    matchLabels:
      app: diun
  template:
    metadata:
      labels:
        app: diun
    spec:
      serviceAccountName: diun
      containers:
        - name: diun
          image: crazymax/diun:latest
          imagePullPolicy: Always
          args: ["serve"]
          env:
            - name: TZ
              value: "{{ timezone }}"
            - name: LOG_LEVEL
              value: "info"
            - name: LOG_JSON
              value: "false"
            - name: DIUN_WATCH_WORKERS
              value: "20"
            - name: DIUN_WATCH_SCHEDULE
              value: "0 */6 * * *"
            - name: DIUN_PROVIDERS_KUBERNETES
              value: "true"
            - name: DIUN_NOTIF_TELEGRAM_TOKEN
              value: "6622180450:AAEUha1N2YPOhYI8NllMGgL2dpAAn26OsV0"
            - name: DIUN_NOTIF_TELEGRAM_CHATIDS
              value: "217273606"
          volumeMounts:
            - mountPath: "/data"
              name: "data"
      restartPolicy: Always
      volumes:
        - name: "data"
          hostPath:
            path: {{ data_path }}/diun

---
apiVersion: v1
kind: Service
metadata:
  name: bazarr
  namespace: media
spec:
  selector:
    app: bazarr
  ports:
    - protocol: TCP
      port: 6767
      targetPort: webui

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bazarr
  namespace: media
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: traefik
  rules:
    - host: bazarr.{{ domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bazarr
                port:
                  number: 6767
  tls:
    - secretName: bazarr-service-cert
      hosts:
        - bazarr.{{ domain }}