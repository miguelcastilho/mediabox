---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homeassistant
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homeassistant
  template:
    metadata:
      labels:
        app: homeassistant
      annotations:
        diun.enable: "true"
        diun.watch_repo: "true"
        diun.exclude_tags: "dev;sha;rc;latest;stable;beta;b"
    spec:
      containers:
        - name: homeassistant
          image: ghcr.io/home-assistant/home-assistant:2024.4.4
          volumeMounts:
            - name: homeassistant-config
              mountPath: /config
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
          env:
            - name: TZ
              value: {{ timezone }}
          ports:
            - containerPort: 8123
              name: webui
            - containerPort: 1400
              name: sonos
      volumes:
        - name: homeassistant-config
          hostPath:
            path: {{ data_path }}/homeassistant
        - name: localtime
          hostPath:
            path: /etc/localtime

---
apiVersion: v1
kind: Service
metadata:
  name: homeassistant
  namespace: infra
spec:
  selector:
    app: homeassistant
  ports:
    - protocol: TCP
      port: 8123
      targetPort: webui
      name: webui
    - protocol: TCP
      port: 1400
      targetPort: sonos
      name: sonos
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homeassistant
  namespace: infra
  annotations:
spec:
  ingressClassName: traefik
  rules:
    - host: homeassistant.{{ domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: homeassistant
                port:
                  number: 8123



















########### NODE RED ############
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodered
  namespace: infra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodered
  template:
    metadata:
      labels:
        app: nodered
      annotations:
        diun.enable: "true"
        diun.watch_repo: "true"
        diun.exclude_tags: ""
    spec:
      containers:
        - name: nodered
          image: nodered/node-red:3.1.3
          volumeMounts:
            - name: data
              mountPath: /data
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
          ports:
            - containerPort: 1880
              name: webui
      volumes:
        - name: data
          hostPath:
            path: {{ data_path }}/nodered
        - name: localtime
          hostPath:
            path: /etc/localtime

---
apiVersion: v1
kind: Service
metadata:
  name: nodered
  namespace: infra
spec:
  selector:
    app: nodered
  ports:
    - protocol: TCP 
      port: 1880
      targetPort: webui

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nodered
  namespace: infra
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: traefik
  rules:
    - host: nodered.{{ domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nodered
                port:
                  number: 1880
  tls:
    - secretName: nodered-service-cert
      hosts:
        - nodered.{{ domain }}