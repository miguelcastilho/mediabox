---
- name: "Create {{ data_path }} directory"
  become: true
  ansible.builtin.file:
    path: "{{ data_path }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Check if cluster is installed
  ansible.builtin.stat:
    path: /etc/rancher/k3s/config.yaml
  register: k3s_installed

- name: Prevent downgrades
  block:
    - name: Get deployed k3s version
      ansible.builtin.command: k3s --version
      register: k3s_version
      changed_when: false
      failed_when: false

    - name: Extract k3s version
      ansible.builtin.set_fact:
        current_k3s_version: "{{ k3s_version.stdout | regex_replace('(?im)k3s version (?P<version>[a-z0-9\\.\\+]+).*\n.*', '\\g<version>') }}"

    - name: Check if upgrades are allowed
      ansible.builtin.assert:
        that:
          - "k3s_release_version is version(current_k3s_version, '>=')"
        fail_msg: "Unable to upgrade k3s because the deployed version is higher than the one specified in the configuration"
  when: k3s_installed.stat.exists

- name: Install Kubernetes
  ansible.builtin.include_role:
    name: xanmanning.k3s
    public: true
  vars:
    k3s_state: installed

- name: Create ~/.kube directory if it does not exist
  ansible.builtin.file:
    path: ~/.kube
    state: directory

- name: Copy kubeconfig to the home directory
  become: true
  ansible.builtin.copy:
    remote_src: true
    src: /etc/rancher/k3s/k3s.yaml
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'

- name: "Create ~/.kube directory"
  delegate_to: localhost
  run_once: true
  ansible.builtin.file:
    path: "~/.kube"
    state: directory

- name: Copy kubeconfig to the project directory
  become: true
  ansible.builtin.fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "~/.kube/config"
    flat: true

- name: Update kubeconfig with the correct load balancer address
  delegate_to: localhost
  run_once: true
  ansible.builtin.replace:
    path: "~/.kube/config"
    regexp: https://127.0.0.1:6443
    replace: "https://{{ ansible_host }}:6443"
