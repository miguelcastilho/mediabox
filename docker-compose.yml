version: '3'

services:
  duplicati:
    image: 'lscr.io/linuxserver/duplicati:2.0.7'
    container_name: duplicati
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - '${MEDIABOX_PATH}/duplicati:/config'
      - '${MEDIABOX_PATH}/duplicati/backups:/backups'
      - '${MEDIABOX_PATH}:/source'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '8200:8200'
    restart: unless-stopped
    networks:
      - mediabox_network

  sabnzbd:
    image: 'ghcr.io/linuxserver/sabnzbd:4.0.3'
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - '${MEDIABOX_PATH}/sabnzbd:/config'
      - '/media/HDD/downloads:/downloads'
      - '/media/HDD/incomplete-downloads:/incomplete-downloads'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '8081:8080'
    restart: unless-stopped
    networks:
      - mediabox_network

  sonarr:
    image: 'ghcr.io/linuxserver/sonarr:3.0.10'
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - '${MEDIABOX_PATH}/sonarr:/config'
      - '/media/HDD/Media/tv_shows:/tv'
      - '/media/HDD/downloads:/downloads'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '8989:8989'
    restart: unless-stopped
    networks:
      - mediabox_network

  radarr:
    image: 'ghcr.io/linuxserver/radarr:4.6.4'
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - '${MEDIABOX_PATH}/radarr:/config'
      - '/media/HDD/Media/movies:/movies'
      - '/media/HDD/downloads:/downloads'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '7878:7878'
    restart: unless-stopped
    networks:
      - mediabox_network

  bazarr:
    image: 'ghcr.io/linuxserver/bazarr:1.2.4'
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - '6767:6767'
    volumes:
      - '${MEDIABOX_PATH}/bazarr:/config'
      - '/media/HDD/Media/movies:/movies'
      - '/media/HDD/Media/tv_shows:/tv'
      - '/etc/localtime:/etc/localtime:ro'
    restart: unless-stopped
    networks:
      - mediabox_network

  overseerr:
    image: 'ghcr.io/linuxserver/overseerr:1.33.2'
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - '${MEDIABOX_PATH}/overseerr:/config'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '5055:5055'
    restart: unless-stopped
    networks:
      - mediabox_network

  plex:
    image: 'ghcr.io/linuxserver/plex:1.32.5'
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - PLEX_CLAIM=claim-W5WTiks9n28nFUrXmiFx
    volumes:
      - '${MEDIABOX_PATH}/plex:/config'
      - '/media/HDD/Media/tv_shows:/tv'
      - '/media/HDD/Media/movies:/movies'
      - '/etc/localtime:/etc/localtime:ro'
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    image: 'ghcr.io/home-assistant/home-assistant:2023.8'
    volumes:
      - '${MEDIABOX_PATH}/homeassistant:/config'
      - '/etc/localtime:/etc/localtime:ro'
    restart: unless-stopped
    privileged: true
    network_mode: host
    depends_on:
      - mqtt
      - zigbee2mqtt

  deluge:
    image: 'lscr.io/linuxserver/deluge:2.1.1'
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - '${MEDIABOX_PATH}/deluge:/config'
      - '/media/HDD/downloads:/downloads'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '8112:8112'
      - '6881:6881'
      - '6881:6881/udp'
    restart: unless-stopped
    networks:
      - mediabox_network

  prowlarr:
    image: 'lscr.io/linuxserver/prowlarr:1.7.4'
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - '${MEDIABOX_PATH}/prowlarr:/config'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '9696:9696'
    restart: unless-stopped
    networks:
      - mediabox_network

  flaresolverr:
    image: 'ghcr.io/flaresolverr/flaresolverr:v3.3.2'
    container_name: flaresolverr
    ports:
      - '8191:8191'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
    restart: unless-stopped
    networks:
      - mediabox_network

  mqtt:
    image: 'eclipse-mosquitto:2.0.15'
    container_name: mqtt
    restart: unless-stopped
    volumes:
      - '${MEDIABOX_PATH}/mqtt:/mosquitto'
    ports:
      - '1883:1883'
    command: mosquitto -c /mosquitto-no-auth.conf
    environment:
      - 'TZ=${TIMEZONE}'
    networks:
      - mediabox_network

  zigbee2mqtt:
    image: 'koenkk/zigbee2mqtt:1.32.2'
    container_name: zigbee2mqtt
    privileged: true
    restart: unless-stopped
    volumes:
      - '${MEDIABOX_PATH}/zigbee2mqtt:/app/data'
      - '/run/udev:/run/udev:ro'
    ports:
      - '8082:8080'
    environment:
      - 'TZ=${TIMEZONE}'
    networks:
      - mediabox_network
    depends_on:
      - mqtt

  timemachine:
    image: 'mbentley/timemachine:smb'
    container_name: timemachine
    network_mode: host
    restart: unless-stopped
    volumes:
      - '/media/timemachine:/opt/timemachine'
    environment:
      - SET_PERMISSIONS=true

  unifi-controller:
    image: 'lscr.io/linuxserver/unifi-controller:7.4.162'
    container_name: unifi-controller
    restart: unless-stopped
    networks:
      - mediabox_network
    volumes:
      - '/media/unifi-controller:/config'
    ports:
      - '8080:8080'
      - '8443:8443'
      - '3478:3478/udp'
      - '10001:10001/udp'
    environment:
      - 'TZ=${TIMEZONE}'
      - PUID=1000
      - PGID=1000

  cloudflared:
    image: 'cloudflare/cloudflared:2023.7.3'
    container_name: cloudflared
    restart: unless-stopped
    networks:
      - mediabox_network
    environment:
      - 'TZ=${TIMEZONE}'
      - PUID=1000
      - PGID=1000
      - 'TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}'
    command: tunnel run

  tailscale:
    image: 'tailscale/tailscale:v1.46.1'
    container_name: tailscale
    hostname: tailscale
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - '${MEDIABOX_PATH}/tailscale:/var/lib'
      - '/dev/net/tun:/dev/net/tun'
    environment:
      - 'TS_AUTHKEY=${TAILSCALE_AUTH_KEY}'
    cap_add:
      - net_admin
      - net_raw

  uptimekuma:
    image: 'louislam/uptime-kuma:1.22.1'
    container_name: uptimekuma
    ports:
      - '3001:3001'
    volumes:
      - '${MEDIABOX_PATH}/uptimekuma:/app/data'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    restart: unless-stopped
    networks:
      - mediabox_network
    depends_on:
      - duplicati
      - sabnzbd
      - sonarr
      - radarr
      - bazarr
      - overseerr
      - plex
      - homeassistant
      - deluge
      - prowlarr
      - flaresolverr
      - timemachine
      - unifi-controller
      - cloudflared
      - tailscale
      - homer

  homer:
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - '${MEDIABOX_PATH}/homer:/www/assets'
    ports:
      - 80:8080
    user: 1000:1000 # default
    environment:
      - INIT_ASSETS=1 # default
    restart: unless-stopped
    networks:
      - mediabox_network

networks:
  mediabox_network:
    name: mediabox
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16
          gateway: 172.23.0.1
